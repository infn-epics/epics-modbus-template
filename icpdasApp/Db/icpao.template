
record(ao, "$(P):$(R):$(ID)")
{
    field(DESC, "$(ID) SET RAW")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT) $(REGOFFSET) $(TIMEOUT=1000))INT16")
    field(SCAN, "Passive")
}
record(ai, "$(P):$(R):$(ID)_RB")
{
    field(DESC, "$(ID) ReadBack")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT) $(REGOFFSET) $(TIMEOUT=1000))INT16")
    field(SCAN, "I/O Intr")
}

record(calc, "$(P):$(R):VOLTS$(REGOFFSET)_RB")
{
    field(DESC, "Analog Input $(REGOFFSET) in Volts")
    field(INPA, "$(P):$(R):$(ID)_RB")
    field(CALC, "A / 32768. * $(maxscale=10.)")
    field(PREC, "3")
    field(EGU, "V")
}
record(calcout, "$(P):$(R):VOLTS$(REGOFFSET)")
{
    field(DESC, "Convert Volts to Raw Integer and Write")
    field(INPA, "$(P):$(R):VOLTS$(REGOFFSET).VAL NPP")  # Use the current value as input
    field(CALC, "A * 32768. / $(maxscale=10.)")         # Convert volts to raw integer
    field(OUT, "$(P):$(R):$(ID) PP")  
    field(OOPT, "Every Time")                           # Always output
    field(PREC, "3")                                    # Precision for display
    field(EGU, "V")   
}